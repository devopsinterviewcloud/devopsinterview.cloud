# DevOpsInterview.Cloud - Docker Compose Configuration
# For local development with database

version: '3.8'

services:
  # Application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://devopsinterview:password@db:5432/devopsinterview
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      db:
        condition: service_healthy
    networks:
      - devopsinterview-network

  # PostgreSQL database
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: devopsinterview
      POSTGRES_USER: devopsinterview
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devopsinterview -d devopsinterview"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - devopsinterview-network

  # Redis (for future caching/sessions)
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - devopsinterview-network

  # Database admin interface (optional)
  adminer:
    image: adminer:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      - db
    networks:
      - devopsinterview-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  devopsinterview-network:
    driver: bridge